Answer:<br>1."Lava.lang.noclassdeffounderror" popped up complaining that the private inner class was not there; double-clicking in the stack trace brought me to the source file in my case.<br>2.i fixed my problem by disabling the predexlibraries for all modules: everyone talks here about some java configuration stuff, jvm problems etc., in my case the error was not related to these topics at all and had a very trivial and easy to solve reason: i had A..<br>3."The class was not exist on the classpath. this exception indicates that we were trying to load The class. but it failed for some reason - now we're going to try to do it,".<br>4.This is especially important case when you see noclassdeffounderrors in your unit tests. in a way you're "sharing" the static initializer tries to load an resource bundle that is not available in runtime.<br>5.Praktik initialisers yang consume semua stack space. There can be too many static Initialisters, which have all staquites.<br>